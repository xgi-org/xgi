# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#

import os
import sys
from datetime import date, datetime

import requests
from sphinx_gallery.sorting import ExplicitOrder, FileNameSortKey

import xgi

sys.path.insert(0, os.path.abspath("."))
sys.path.append(os.path.join(os.path.dirname(__name__), "xgi"))


# -- Project information -----------------------------------------------------
project = "XGI"
copyright = f"2021-{date.today().year} XGI Developers"
version = xgi.__version__

# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = []

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# copybutton options
copybutton_prompt_text = "myinputprompt"
copybutton_prompt_text = r">>> |\.\.\. |\$ |In \[\d*\]: | {2,5}\.\.\.: | {5,8}: "
copybutton_prompt_is_regexp = True

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]
html_css_files = ["custom.css"]
html_js_files = ["table.js"]
html_favicon = "_static/x.ico"
# If your documentation needs a minimal Sphinx version, state it here.
needs_sphinx = "6.2.1"

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.napoleon",
    "sphinx.ext.autosummary",
    "sphinx.ext.autodoc",
    "sphinx.ext.coverage",
    "sphinx.ext.doctest",
    "sphinx.ext.intersphinx",
    "sphinx.ext.mathjax",
    "sphinx.ext.todo",
    "sphinx.ext.viewcode",
    "sphinx_copybutton",
    "sphinx_design",
    "sphinx_gallery.gen_gallery",
    "nbsphinx",
    "nbsphinx_link",
]


# Automatically generate stub pages when using the .. autosummary directive
autosummary_generate = True
autosummary_generate_overwrite = False

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
source_suffix = [".rst", ".md"]
# source_suffix = ".rst"

# The encoding of source files.
# source_encoding = 'utf-8-sig'

# The master toctree document.
root_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
r = requests.get("https://api.github.com/repos/xgi-org/xgi/releases/latest")

if r.ok:
    release_date = (
        datetime.fromisoformat(r.json()["published_at"]).date().strftime("%b %d, %Y")
    )
    release_url = r.json()["html_url"]
    release_version = r.json()["tag_name"].strip("v")
else:
    raise Exception(f"Error: HTTP response {r.status_code}")

rst_epilog = f"""
.. role:: raw-html(raw)
   :format: html
.. |release_announcement| replace:: :raw-html:`<a href={release_url}><button type="button" class="version-button">XGI {release_version} released! {release_date}</button></a>`
.. |release_date| replace:: {release_date}
.. |release_version| replace:: {release_version}
"""

today = release_date
# Else, today_fmt is used as the format for a strftime call.
# today_fmt = "%B %d, %Y"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all
# documents.
# default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
add_module_names = False

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
# pygments_style = "sphinx"
pygments_style = "friendly"

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = "pydata_sphinx_theme"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the

version_match = os.environ.get("READTHEDOCS_VERSION")

# If READTHEDOCS_VERSION doesn't exist, we're not on RTD
if not version_match:
    version_match = "dev"

# If it is an integer, we're in a PR build and the version isn't correct.
elif version_match.isdigit():
    version_match = "dev"

# If it's "latest" â†’ change to "dev" (that's what we want the switcher to call it)
elif version_match == "latest":
    version_match = "dev"

else:
    version_match = "stable"


if version_match == "stable":
    tags.add("stable_version")
elif version_match == "dev":
    tags.add("dev_version")

# documentation.
html_theme_options = {
    "logo": {
        "image_light": "../../logo/logo.svg",
        "image_dark": "../../logo/logo_white.svg",
    },
    "navbar_start": ["navbar-logo"],
    "navbar_end": [
        "theme-switcher",
        "navbar-icon-links",
        "version-switcher",
    ],
    "icon_links": [
        {
            "name": "GitHub",
            "url": "https://github.com/xgi-org/xgi",
            "icon": "fab fa-github-square",  # Font Awesome icon
        },
        {
            "name": "Twitter",
            "url": "https://twitter.com/xginets",
            "icon": "fab fa-twitter-square",  # Font Awesome icon
        },
    ],
    "header_links_before_dropdown": 5,
    "switcher": {
        "json_url": (
            "https://xgi.readthedocs.io/en/latest/_static/version_switcher.json"
        ),
        "version_match": version_match,
    },
}


html_sidebars = {
    "**": ["sidebar-nav-bs", "sidebar-ethical-ads"],
    "index": [],
    "installing": [],
    "tutorial": [],
    "xgi-data": [],
    "auto_examples/index": [],
    "gallery": [],
    "contribute": [],
    "user_guides": [],
    "using-xgi": [],
}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = ["_static"]
html_static_path = ["_static"]

html_show_sphinx = True

htmlhelp_basename = "XGIDoc"

# -- Options for Sphinx Gallery ----------------------


sphinx_gallery_conf = {
    # path to your examples scripts
    "examples_dirs": "../../examples",
    "subsection_order": ExplicitOrder(
        [
            "../../examples/basic",
            "../../examples/layouts",
            "../../examples/stats",
            "../../examples/advanced",
        ]
    ),
    "within_subsection_order": "FileNameSortKey",
    # path where to save gallery generated examples
    "gallery_dirs": "auto_examples",
    "plot_gallery": "True",
    "image_scrapers": ("matplotlib",),
}

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #'preamble': '',
    # Latex figure (float) alignment
    #'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).

latex_documents = [
    (
        root_doc,
        "xgi.tex",
        "XGI Documentation",
        "",
        "manual",
    ),
]

man_pages = [(root_doc, "XGI", "XGI Documentation", "", 1)]

epub_title = project
epub_author = ""
epub_publisher = ""
epub_copyright = copyright

epub_exclude_files = ["search.html"]


def setup(app):
    app.add_js_file("copybutton.js")
